
\documentclass[11pt]{article}

%\usepackage[french]{babel}
\usepackage[utf8]{inputenc}
\usepackage[margin=0.75in]{geometry}
\usepackage{graphicx}
\usepackage{appendix}
\usepackage{hyperref}


% Titles specifications
\newcommand{\hmwkTitle}{Case study 1}
\newcommand{\hmwkDueDate}{\today}
\newcommand{\hmwkClass}{STA 723}
\newcommand{\hmwkClassTime}{}
\newcommand{\hmwkClassInstructor}{Professor David Dunson}
\newcommand{\hmwkAuthorName}{\textbf{Olivier Binette, Joe Mathews and Brian Kundinger}}
\newcommand{\smallAuthorName}{\textbf{Olivier, Joe and Brian}}

\newcounter{homeworkProblemCounter}
\setcounter{homeworkProblemCounter}{1}
\input{header-en}


\begin{document}
% Make title.
\clearpage\maketitle
\thispagestyle{empty}
\pagebreak

<<echo=FALSE, message=FALSE>>=
library(tidyverse)
library(cowplot)
source("prettyplot.R")
@

\section*{Exploratory Data Analysis}

This dataset from the National Collaborative Perinatal Project (CPP) relates gestational age to chemical exposure (DDE and PCBs) and other factors (socio-economic and health-related) in 2380 pregnant women. The goal is to assess how exposure to DDE and PCBs impact the risk of preterm birth, defined as delivery before 37 weeks.
\\

\subsubsection*{Data cleaning and manipulations} 

We removed pregnancies over 55 weeks from the dataset. We also dropped the {\tt albumin} variable, which contains $93\%$ missing values. The variables {\tt score\_income}, {\tt score\_occupation} and {\tt score\_education} contain $21\%$ missing values. Otherwise the data contains only one observation (\# 1857) with missing $PCBs$ values, which we remove. Given the low sample size for the ``other'' {\tt race} classification ($n = 123$), we combined ``black'' and ``other'' in a single class of size $1336$. Finally, to help with visualization and interpretation, we summarized the different PBCs with a positively weighted average. The weights were chosen to minimize the sum of squared orthogonal residuals to normalized PCBs. This ensures that this one-dimensional summary is a relatively good approximation to the PCBs data.


<<echo=FALSE, message=FALSE, include=FALSE>>=
data = readRDS("Longnecker.rds") %>% 
  dplyr::select(-albumin) %>% 
  filter(gestational_age < 55) %>% 
  mutate(smoking_status = factor(ifelse(smoking_status, "smoking", "non-smoking")),
         preterm = gestational_age < 37,
         term_class = factor(case_when(gestational_age < 34 ~ "very_preterm",
                                       gestational_age < 37 ~ "late_preterm",
                                       TRUE ~ "non_preterm"), 
                             levels=c("very_preterm", "late_preterm", "non_preterm")),
         race = factor(ifelse(race=="white", "white", "other")),
         center = factor(center),
         n_col_NA = rowSums(cbind(is.na(score_education), 
                                  is.na(score_income), 
                                  is.na(score_occupation)))
         )

PCB_vars = c("pcb_028", "pcb_052", "pcb_074", "pcb_105", "pcb_118", "pcb_153", "pcb_170", "pcb_138", "pcb_180", "pcb_194", "pcb_203")

# Define PCB_sum
data = data %>% 
  mutate(PCB_sum = rowSums(data[,PCB_vars]))

# Removing observation with NA PCBs
data = data[-1857, ]

PCBs = scale(as.matrix(data[, PCB_vars]), scale=T)

PCB_summary = PCBs %*% princomp(PCBs)$loadings[,1, drop=F]
data = data %>% mutate(PCB_summary = PCB_summary)

# Remove NA values
complete_data = data %>% filter(n_col_NA == 0)

# Proportion of NA in the albumin variable.
mean(is.na(readRDS("Longnecker.rds")$albumin)) %>% round(2)

# Proportion of NA values among score_income, score_education and score_occupation.
mean(is.na(
  data %>%
    dplyr::select(score_income, score_education, score_occupation)
  )) %>% round(2)

# Proportion of NA values elsewhere
mean(is.na(
  data %>%
    dplyr::select(-score_income, -score_education, -score_occupation)
  ))
@


\subsubsection*{Gestational age}

Gestational age distribution by groups.

<<echo=FALSE, warning=FALSE, message=FALSE, fig.width=8, fig.height=2.5, fig.align="center">>=
p1 = ggplot(data, aes(x = gestational_age, color = race)) +
  geom_density(aes(linetype=smoking_status), bw=0.8) +
  theme_minimal() +
  theme(text = element_text(size=8), 
      legend.position = "right",
      legend.key.size = unit(0.35, "cm"),
      plot.title = element_text(hjust = 0))

p2 = ggplot(data, aes(x = gestational_age, color=center)) +
  geom_density(bw=2) + 
  theme_minimal() + 
  theme(text = element_text(size=8), 
    legend.position="right",
    legend.key.size = unit(0.35, "cm"),
    plot.title = element_text(hjust = 0)) +
  facet_wrap(vars(race))

cowplot::plot_grid(p1, p2, rel_widths=c(1,1.5))

# Gestational age for missing vs non-missing data
# 
#p3 = ggplot(data, aes(x = gestational_age, linetype=n_col_NA>0)) +
#  geom_density(bw=1) + 
#  theme_minimal() + 
#  theme(text = element_text(size=8), 
#    legend.position="right",
#    legend.key.size = unit(0.35, "cm"),
#    plot.title = element_text(hjust = 0))

#p3
@

Relationship with DDE and PCBs: violin plots vs quantiles + preterm risk plot

<<echo=FALSE, warning=FALSE, message=FALSE, fig.width=8, fig.height=3, fig.align="center">>=
p3 = data %>% ggplot(aes(x=dde, color=term_class)) + 
  geom_density(bw=10) + 
  theme_minimal() + 
  theme(legend.position = "none") + 
  facet_wrap(vars(race))

p4 = data %>% ggplot(aes(x=PCB_summary, color=term_class)) + 
  geom_density(bw=1.4) + 
  theme_minimal() + 
  facet_wrap(vars(race))

cowplot::plot_grid(p3, p4, rel_widths = c(1,1.5))
@

<<echo=FALSE, warning=FALSE, message=FALSE, fig.width=8, fig.height=2.5, fig.align="center">>=
limits = c(-Inf, quantile(data$dde, c(0.25, 0.5, 0.75)), Inf)

prop_CI <- function(dat, level=0.95) {
  prop.test(sum(dat), length(dat), conf.level = level)$conf.int
}

p1 = data %>% 
  mutate(dde_cut = cut(data$dde, limits)) %>% 
  group_by(dde_cut, race) %>% 
  summarise(late_risk = mean(preterm),
            ymin = prop_CI(preterm)[1],
            ymax = prop_CI(preterm)[2]) %>% 
  ggplot(aes(x=dde_cut, y=late_risk, color=race, group=race)) + 
  geom_line(position=position_dodge(0.2)) +
  geom_pointrange(aes(ymin=ymin, ymax=ymax), position=position_dodge(0.2)) +
  ylab("Preterm risk (< 37 weeks)") +
  theme_minimal()

p2 = data %>% 
  mutate(dde_cut = cut(data$dde, limits),
         very_preterm = gestational_age < 34,
         late_preterm = gestational_age < 37 & gestational_age >= 34) %>% 
  group_by(dde_cut, race) %>% 
  summarise(very_risk = mean(very_preterm),
            late_risk = mean(late_preterm),
            ymin_very = prop_CI(very_preterm)[1],
            ymax_very = prop_CI(very_preterm)[2],
            ymin_late = prop_CI(late_preterm)[1],
            ymax_late = prop_CI(late_preterm)[2]) %>% 
  ggplot(aes(x=dde_cut, y=very_risk, color=race, group=race)) + 
  geom_line(position=position_dodge(0.2)) +
  geom_pointrange(aes(ymin=ymin_very, ymax=ymax_very), position=position_dodge(0.2)) +
  geom_point(aes(x=dde_cut, y=late_risk, color=race, group=race), position=position_dodge(0.2), size=2.6) +
  geom_line(aes(x=dde_cut, y=late_risk, color=race, group=race), position=position_dodge(0.2), linetype=2) +
  geom_pointrange(aes(ymin=ymin_late, ymax=ymax_late), position=position_dodge(0.2)) +
  ylab("Preterm risks") +
  theme_minimal()

cowplot::plot_grid(p1, p2, rel_widths=c(1,1))
@

<<echo=FALSE, warning=FALSE, message=FALSE, fig.width=8, fig.height=2.5, fig.align="center">>=
limits = c(-Inf, quantile(data$PCB_summary, c(0.25, 0.5, 0.75)), Inf)

prop_CI <- function(dat, level=0.95) {
  prop.test(sum(dat), length(dat), conf.level = level)$conf.int
}

p1 = data %>% 
  mutate(PCB_cut = cut(data$PCB_summary, limits)) %>% 
  group_by(PCB_cut, race) %>% 
  summarise(late_risk = mean(preterm),
            ymin = prop_CI(preterm)[1],
            ymax = prop_CI(preterm)[2]) %>% 
  ggplot(aes(x=PCB_cut, y=late_risk, color=race, group=race)) + 
  geom_line(position=position_dodge(0.2)) +
  geom_pointrange(aes(ymin=ymin, ymax=ymax), position=position_dodge(0.2)) +
  ylab("Preterm risk (< 37 weeks)") +
  theme_minimal()

p2 = data %>% 
  mutate(PCB_cut = cut(data$PCB_summary, limits),
         very_preterm = gestational_age < 34,
         late_preterm = gestational_age < 37 & gestational_age >= 34) %>% 
  group_by(PCB_cut, race) %>% 
  summarise(very_risk = mean(very_preterm),
            late_risk = mean(late_preterm),
            ymin_very = prop_CI(very_preterm)[1],
            ymax_very = prop_CI(very_preterm)[2],
            ymin_late = prop_CI(late_preterm)[1],
            ymax_late = prop_CI(late_preterm)[2]) %>% 
  ggplot(aes(x=PCB_cut, y=very_risk, color=race, group=race)) + 
  geom_line(position=position_dodge(0.2)) +
  geom_pointrange(aes(ymin=ymin_very, ymax=ymax_very), position=position_dodge(0.2)) +
  geom_point(aes(x=PCB_cut, y=late_risk, color=race, group=race), position=position_dodge(0.2), size=2.6) +
  geom_line(aes(x=PCB_cut, y=late_risk, color=race, group=race), position=position_dodge(0.2), linetype=2) +
  geom_pointrange(aes(ymin=ymin_late, ymax=ymax_late), position=position_dodge(0.2)) +
  ylab("Preterm risks") +
  theme_minimal()

cowplot::plot_grid(p1, p2, rel_widths=c(1,1))
@


Colinearity between PCBs, dde and other covariates; partial correlation plot between PCBs and dde.








<<echo=FALSE, warning=FALSE, message=FALSE, fig.width=8, fig.height=2.5, fig.align="center">>=

# Accounting for other variables through a GAM
#library(mgcv)
#complete_data = data %>% filter(n_col_NA == 0)

#out = gam(gestational_age ~ race + smoking_status + center + 
#            s(score_income) + s(score_education) + s(score_occupation) + s#(maternal_age) + s(score_income*maternal_age), data=complete_data)

#with(complete_data,
#  plot(data.frame(gestational_age, 
#                  GAM_residuals=out$residuals, 
#                  RF_residuals = complete_data$gestational_age - predict(outrf, complete_data),
#                  log(dde/cholesterol),
#                  PCB_summary), 
#       alpha=0.3, axes=F, col=race)
#)
@

<<echo=FALSE>>=
#library(randomForest)

#outrf = randomForest(gestational_age ~ smoking_status + race + center + score_education + score_income + score_occupation + dde + PCB_summary, data=complete_data)

#outrf

#plot(predict(outrf, complete_data), complete_data$gestational_age)

#plot(out$fitted.values, complete_data$gestational_age)

#library(rfUtilities)

#rf.crossValidation(outrf, complete_data)

@



<<>>=

out = complete_data %>% 
  glm(preterm ~ smoking_status + score_income + score_education + score_occupation + maternal_age + cholesterol + dde + PCB_summary + center, data=.)

summary(out)

@

<<>>=
outrf = randomForest(gestational_age ~ smoking_status + race + center + score_education + score_income + score_occupation + triglycerides + cholesterol, data=complete_data)
@

<<>>=
residuals = complete_data$gestational_age - predict(outrf)
cor.test(residuals, complete_data$dde)
@

\section{Model}
Although "preterm birth" is strictly defined as a pregnancy of less than 37 weeks, we know that pregnancies at precisely 37 weeks do not necessarily have poor health outcomes. Therefore, we define two binary variables; we assign "preterm" to observations where the gestational age is less than or equal to 37, and "earlypreterm" to those where the gestational age is less than or equal to 34 weeks. Since these are binary variables, we run logistic regression, and compare our findings from the two analysis. 

To control for the baseline effects of social factors like race and socioeconomicstatus and other health metrics like triglyceride and cholesterol levels, we regress "preterm" against all other variables. We find that dde, totalpcb, triglycerides, race, and center 37 are statistically significant. We do the same with "earlypreterm" and find only totalpbc and race to be significant. The tables below provide effect size and pvalues for DDE and PCB, the variables of interest.
<<>>={r, echo=FALSE, warning=FALSE, fig.height=5}
data = readRDS("Longnecker.rds")

data = data %>%
 select(-albumin) %>%
 filter(gestational_age < 60)

complete_data = data[complete.cases(data), ]
complete_data <- mutate(complete_data, preterm = case_when(
 gestational_age<37 ~ 1,
 gestational_age>=37 ~ 0
), earlypreterm = case_when(
 gestational_age<34 ~ 1,
 gestational_age>=34 ~ 0
), totalpcb = pcb_028 + pcb_052 + pcb_074 + pcb_105 + pcb_118 + pcb_153 + pcb_170 + pcb_138 + pcb_180 +pcb_194 +pcb_203,
 race = factor(ifelse(race=="white", "white", "other")),
 center = factor(center),
 smoking_status = factor(ifelse(smoking_status, "smoking", "non-smoking"))
)

#Models for preterm
model.base <- glm(preterm ~ dde + totalpcb + triglycerides + race + score_education + score_income + score_occupation + maternal_age + cholesterol + center-1, data = complete_data, family = "binomial")
@

We compare this result with Bayesian Model Averaging.
<<>>={r, echo=FALSE, warning=FALSE, fig.height=5, cache= TRUE}
bas.model.base <- bas.glm(preterm ~ dde + totalpcb + triglycerides + race + score_education + score_income + score_occupation + maternal_age + cholesterol + center, data = complete_data, family = binomial(link = "logit"), modelprior = uniform(), MCMC.iterations = 10000)
image(bas.model.base)
@

Since cases classified as preterm and early preterm comprise relatively small porportions of the data, and since we reduced the individual PCB variables into one aggregate totalpcb variable, we check the significance of these variables through Bayesian Model Averaging (BMA). This process works by assigning a prior distribution to the set of possible models, and then uses the observed data set to calculate posterior probabilities for each of the possible models. One advantage of this method is that we obtain a posterior probability for each variable, which serves as a way to quantify undercertainty about each variable's statistical significance. 

Using a uniform prior distribution on the set of models, we conduct BMA on the models outlined above. The posterior probabilities of each variable are provided below.

<<>>={r, echo=FALSE, warning=FALSE, fig.height=5, cache= TRUE}
#Models for early preterm
model.base.early <- glm(earlypreterm ~ dde + totalpcb + triglycerides + race + score_education + score_income + score_occupation + maternal_age + cholesterol + center, data = complete_data, family = "binomial")

bas.model.base.early <- bas.glm(earlypreterm ~ dde + totalpcb + triglycerides + race + score_education + score_income + score_occupation + maternal_age + cholesterol + center, data = complete_data, family = binomial(link = "logit"), modelprior = uniform(), MCMC.iterations = 10000)
image(bas.model.base.early)
@

BMA mostly confirms the statstical significances found through logistic regression, but notbaly highlights uncertainty about the explanatory power of PCB in the model. We believe this inconsistency is due to the low number of preterm and earlypreterm births observed in the dataset, and note that further study should be done to asses the statistical significance of PCB. 


(SHOULD THIS GO IN CONCLUSION?)
In comparing results based on different definitions of preterm birth, we find that it is likely the case that DDE (and to a lesser extent, PCB) are associated with early birth. However, in the more extreme cases, where gestational age is less than 34 years, there are likely other factors not represented in the data that account for this difference.

\end{document}


